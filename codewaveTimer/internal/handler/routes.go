// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"encoding/json"
	"fmt"
	"net/http"

	"codewave-timer/codewaveTimer/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 创建一个新的定时任务
				Method:  http.MethodPost,
				Path:    "/api/timer/create",
				Handler: createTimerHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 启动定时任务
				Method:  http.MethodPost,
				Path:    "/api/timer/enable",
				Handler: enableTimerHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 停止定时任务
				Method:  http.MethodPost,
				Path:    "/api/timer/disable",
				Handler: disableTimerHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 测试API
				Method:  http.MethodPost,
				Path:    "/codewavetimer/callback",
				Handler: func(writer http.ResponseWriter, request *http.Request) {
					response := map[string]string{"message": "hello world"}
					writer.Header().Set("Content-Type", "application/json")
					json.NewEncoder(writer).Encode(response)
					fmt.Println("Response sent: hello world")
				},
			},
		},
	)

}
